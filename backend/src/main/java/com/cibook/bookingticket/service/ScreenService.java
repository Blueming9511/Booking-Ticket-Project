package com.cibook.bookingticket.service;

import com.cibook.bookingticket.model.Screen;
import com.cibook.bookingticket.repository.ScreenRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Map;
import java.util.Optional;
import java.util.stream.Collectors;


@Service
public class ScreenService implements IService<Screen, String>{
    private final ScreenRepository screenRepository;
    private final AutoGeneratedCode codeGenerator;

    @Autowired
    public ScreenService(ScreenRepository screenRepository, AutoGeneratedCode codeGenerator) {
        this.screenRepository = screenRepository;
        this.codeGenerator = codeGenerator;
    }

    @Override
    public Screen add(Screen entity) {
        entity.setScreenCode(codeGenerator.generateScreenCode(entity.getCinemaId()));
        return screenRepository.save(entity);
    }

    @Override
    public Optional<Screen> findById(String id) {
        return screenRepository.findById(id);
    }

    @Override
    public Optional<Screen> findByCode(String id) {
        return screenRepository.findByScreenCode(id);
    }

    @Override
    public List<Screen> findAll() {
        return screenRepository.findAll();
    }

    @Override
    public Map<String, String> findAllNamesWithID() {
        return screenRepository.findAll().stream()
                .filter(screen -> screen.getScreenCode() != null && screen.getCinemaId() != null)
                .collect(Collectors.toMap(
                        Screen::getCinemaId,
                        Screen::getScreenCode,
                        (existing, replacement) -> existing
                ));
    }

    @Override
    public Screen update(String id, Screen entity) {
        if (!existsById(id)) return null;
        Screen screen = findById(id).get();
        entity.setScreenCode(screen.getScreenCode());
        entity.setId(screen.getId());
        return screenRepository.save(entity);
    }

    @Override
    public void deleteById(String id) {
        screenRepository.deleteById(id);
    }

    @Override
    public boolean existsById(String id) {
        return screenRepository.existsById(id);
    }
}
