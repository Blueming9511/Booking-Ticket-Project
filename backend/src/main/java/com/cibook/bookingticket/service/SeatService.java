package com.cibook.bookingticket.service;

import com.cibook.bookingticket.model.Seat;
import com.cibook.bookingticket.repository.ScreenRepository;
import com.cibook.bookingticket.repository.SeatRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Map;
import java.util.Optional;
import java.util.stream.Collectors;

@Service
public class SeatService implements IService<Seat, String> {
    private final SeatRepository seatRepository;
    private final AutoGeneratedCode codeGenerator;

    @Autowired
    public SeatService(SeatRepository seatRepository, AutoGeneratedCode codeGenerator) {
        this.seatRepository = seatRepository;
        this.codeGenerator = codeGenerator;
    }

    @Override
    public Seat add(Seat entity) {
        entity.setSeatCode(codeGenerator.generateSeatCode(entity.getScreenCode(), entity.getCinemaCode(), entity.getRow()));
        return seatRepository.save(entity);
    }

    @Override
    public Optional<Seat> findById(String id) {
        return seatRepository.findById(id);
    }

    @Override
    public Optional<Seat> findByCode(String id) {
        return seatRepository.findBySeatCode(id);
    }

    @Override
    public List<Seat> findAll() {
        return seatRepository.findAll();
    }

    @Override
    public Map<String, String> findAllNamesWithID() {
        return null;
    }

    @Override
    public Seat update(String id, Seat entity) {
        if (!existsById(id)) return null;
        Seat seat = seatRepository.findById(id).get();
        entity.setSeatCode(seat.getSeatCode());
        entity.setId(seat.getId());
        return seatRepository.save(entity);
    }

    @Override
    public void deleteById(String id) {
        seatRepository.deleteById(id);
    }

    @Override
    public boolean existsById(String id) {
        return seatRepository.existsById(id);
    }

    public List<Seat> addAll(List<Seat> seats) {
        seats.forEach(seat -> {
            String seatCode = codeGenerator.generateSeatCode(
                    seat.getScreenCode(), seat.getCinemaCode(), seat.getRow());
            seat.setSeatCode(seatCode);
            String numberPart = seatCode.replaceAll("[^0-9]+", "");
            int seatNumber = Integer.parseInt(numberPart.substring(numberPart.length() - 1));
            seat.setNumber(seatNumber);
        });
        return seatRepository.saveAll(seats);
    }

    public void deleteAll() {
        seatRepository.deleteAll();
    }
}
